version: "3.4"

services:
  broker:
    image: docker.io/library/redis:7
    container_name: paperless-ngx-redis
    restart: unless-stopped
    volumes:
      - ${DOCKER_VOLUME_STORAGE:-/home/op/persist}/paperless-ngx/redis:/data
    #networks:
    #  - proxy      

  db:
    image: docker.io/library/postgres:13
    container_name: paperless-ngx-db
    restart: unless-stopped
    volumes:
      - ${DOCKER_VOLUME_STORAGE:-/home/op/persist}/paperless-ngx/database:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless
    #networks:
    #  - proxy      
  gotenberg:
    image: docker.io/gotenberg/gotenberg:7.8
    restart: unless-stopped

    # The gotenberg chromium route is used to convert .eml files. We do not
    # want to allow external content like tracking pixels or even javascript.
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"

  tika:
    image: ghcr.io/paperless-ngx/tika:latest
    restart: unless-stopped
  webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    container_name: paperless-ngx-web
    restart: unless-stopped
    depends_on:
      - db
      - broker
    healthcheck:
      test: ["CMD", "curl", "-fs", "-S", "--max-time", "2", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - ${DOCKER_VOLUME_STORAGE:-/home/op/persist}/paperless-ngx/data:/usr/src/paperless/data
      - ${DOCKER_VOLUME_STORAGE:-/home/op/persist}/paperless-ngx/media:/usr/src/paperless/media
      - ${DOCKER_VOLUME_STORAGE:-/home/op/persist}/paperless-ngx/export:/usr/src/paperless/export
      - ${DOCKER_VOLUME_STORAGE:-/home/op/persist}/paperless-ngx/consume:/usr/src/paperless/consume
    env_file: docker-compose.env

      # The container already installs English, German, Italian, Spanish and French
      # You may want additional languages to install for text recognition;
      #PAPERLESS_OCR_LANGUAGES: tur ces 
    #networks:
    #  - proxy
    #labels:
    #  - traefik.enable=true
    #  - traefik.http.routers.paperless-ngx.rule=Host(`paperless.example.com`)
    #  - traefik.http.services.paperless-ngx.loadbalancer.server.port=8000
    #  - traefik.docker.network=proxy
    #  # Part for optional traefik middlewares
    #  - traefik.http.routers.paperless-ngx.middlewares=local-ipwhitelist@file,basic-auth@file
    #  - traefik.http.middlewares.limit.buffering.maxRequestBodyBytes=50000000 # optional, only necessary for enabled file uploads
    #  - traefik.http.middlewares.limit.buffering.maxResponseBodyBytes=50000000 # optional, only necessary for enabled file uploads
    #  - traefik.http.middlewares.limit.buffering.memRequestBodyBytes=50000000 # optional, only necessary for enabled file uploads
    #  - traefik.http.middlewares.limit.buffering.memResponseBodyBytes=50000000 # optional, only necessary for enabled file uploads

  samba:
    image: crazymax/samba
    container_name: samba
    network_mode: host
    volumes:
      - ${DOCKER_VOLUME_STORAGE:-/home/op/persist}/paperless-ngx/samba:/data
      - ${DOCKER_VOLUME_STORAGE:-/home/op/persist}/paperless-ngx/export:/samba/export
      - ${DOCKER_VOLUME_STORAGE:-/home/op/persist}/paperless-ngx/consume:/samba/consume
    environment:
      - "TZ=America/New_York"
      - "SAMBA_LOG_LEVEL=0"
    restart: always
   
networks:
  default:
    external: true
    name: npm_proxy